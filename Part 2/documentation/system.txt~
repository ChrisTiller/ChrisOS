**********************************************************************************
*
*Documentation for the System Class
*
*
*OVERVIEW: The system class, as the name would imply, is the
*meat of the operating system which handles the upper level
*functions the user might request and hanldes process
*scheduling.
*
**********************************************************************************

**********************************************************************************
*CLASS DEFINITION
**********************************************************************************
**********************************************************************************
*FUNCTION
**********************************************************************************

	function name: alias

	function purpose: to alias a system command with a name given by the user 
			  to which then can be used by the user to call the system 
			  command

	function prototype: 
		
		void System::alias(const vector<string>& params)

	function parameter(s):
		
		params - a const string vector which contains
			 the user provided parameters
**********************************************************************************

	function name: allocatePCB

	function purpose: allocates memory for a new process

	function prototype: 
		
		PCB* System::allocatePCB();

	function parameter(s): none
**********************************************************************************

	function name: block

	function purpose: used to take a process in the ready queue and place it
			  in the blocked queue

	function prototype: 
		
		void System::block(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************	

	function name: close

	function purpose: to exit the program

	function prototype: 
		
		void System::close()

	function parameter(s): none
**********************************************************************************

	function name: createPCB

	function purpose: used to create a PCB and insert it into the ready queue

	function prototype: 
		
		void System::createPCB(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: deletePCB

	function purpose: used to remove a PCB from the ready or blocked queue

	function prototype: 
		
		void System::deletePCB(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: displayPCBInfo

	function purpose: given a specified PCB, its information is displayed on
			  the screen

	function prototype: 
		
		void System::displayPCBInfo(PCB* pcb)

	function parameter(s):
		
		pcb - the pcb that you wish to see the information of
**********************************************************************************

	function name: findPCB

	function purpose: searches through the ready and blocked queue in order to 
			  find a specified process. If one is found, its pointer is
			  returned. NULL if not.

	function prototype: 
		
		PCB* System::findPCB(string name)

	function parameter(s):
		
		name - the name of the process you would like to find
**********************************************************************************

	function name: freePCB

	function purpose: deletes the memory associated with a specified process

	function prototype: 
		
		void System::freePCB(PCB* pcb)

	function parameter(s):
		
		pcb - the process that you want to free the memory of
**********************************************************************************

	function name: init

	function purpose: used for ouputing a welcome message
			  followed by a help message to get
			  the user started

	function prototype: 
		
		void System::init()

	function parameter(s): none
**********************************************************************************

	function name: loadSystemFunctions

	function purpose: to pair command names with their function
			  counter parts and add them to a map
			  which will be later used for executing
			  a command the user wants

	function prototype: 
		
		void System::loadSystemFuntions()

	function parameter(s): none
**********************************************************************************

	function name: findCommand

	function purpose: given a user input command, it looks through
   			  all the aliases to determine which command
			  the system needs to execute then tries to
			  find it. If found, the function will return
			  true.

	function prototype: 
		
		bool System::findCommand(Command& command)

	function parameter(s):
		
		command - the command that the user generates
**********************************************************************************

	function name: getDate

	function purpose: prints the current date in a user
			  specified format

	function prototype: 
		
		void System::getDate(const vector<string>& params)

	function parameter(s):
		
		params - a const string vector which contains
			 the format the user wished to use
**********************************************************************************

	function name: getDateTime

	function purpose: prints the current date and time in a user
			  specified format

	function prototype: 
		
		void System::getDateTime(const vector<string>& params)

	function parameter(s):
		
		params - a const string vector which contains
			 the format of the date the user wished to use
      			 followed by the format of the time
**********************************************************************************

	function name: getInstance

	function purpose: returns the only instance of the system
			  object that is available to use in the
			  program

	function prototype: 
		
		System* System::getInstance()

	function parameter(s): none
**********************************************************************************

	function name: getTime

	function purpose: prints the time in a user specified format

	function prototype: 
		
		void System::getTime(const vector<string>& params)

	function parameter(s): 

		params - a const string vector that contains the format
			 of the time the time
**********************************************************************************

	function name: getVersion

	function purpose: prints the current version of the operating system

	function prototype: 
		
		void System::getVerion(const vector<string>& params)

	function parameter(s): 

		params - not used (byproduct of using function pointers)
**********************************************************************************

	function name: help

	function purpose: prints a list of all available commands

	function prototype: 
		
		void System::help(const vector<string>& params)

	function parameter(s): 

		params - not used
**********************************************************************************

	function name: insertPCB

	function purpose: given a specified PCB, it is inserted into its correct
			  queue determined by the PCB's status

	function prototype: 
		
		void System::insertPCB(PCB* pcb)

	function parameter(s):
		
		pcb - the pcb that you wish to be inserted into one of the queues
**********************************************************************************

	function name: removePCB

	function purpose: given a specified PCB, it is removed from its queue but
			  it is not deleted

	function prototype: 
		
		void System::removePCB(PCB* pcb)

	function parameter(s):
		
		pcb - the pcb that you wish to be removed from one of the queues
**********************************************************************************

	function name: resume

	function purpose: used to change a processes' suspension status to no

	function prototype: 
		
		void System::createPCB(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: System

	function purpose: the constructor which uses the ncurses
			  library to determine the width and height
			  of the screen and calls loadSystemFunctions()

	function prototype: 
		
		void System::systemLoop()

	function parameter(s): none
**********************************************************************************

	function name: setPriority

	function purpose: used to change the priority of a process in either the 
			  ready queue or blocked queue

	function prototype: 
		
		void System::setPriority(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
*****************************************************************

	function name: showAll

	function purpose: used to show information about all processes

	function prototype: 
		
		void System::showAll(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: showPCB

	function purpose: used to show information about a specified process

	function prototype: 
		
		void System::showPCB(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: showBlocked

	function purpose: used to show information about all processes in the
			  blocked queue

	function prototype: 
		
		void System::createPCB(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: showReady

	function purpose: used to show information about processes within the 
			  ready queue

	function prototype: 
		
		void System::createPCB(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: suspend

	function purpose: used to suspend a process from either the ready queue or 				  blocked queue

	function prototype: 
		
		void System::suspend(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

	function name: sytemLoop

	function purpose: the main loop for the simulation which
			  gets gets the user command and executes
			  them

	function prototype: 
		
		void System::systemLoop()

	function parameter(s): none
**********************************************************************************

	function name: unblock

	function purpose: removes a process from the blocked queue and places it
			  in the ready queue

	function prototype: 
		
		void System::unblock(const vector<string>& params)

	function parameter(s): 

		params - a string vector containing the parameters that the user
			 will give in the command
**********************************************************************************

**********************************************************************************
*MEMBER VARIABLES
**********************************************************************************

	name: mInstance
	
	purpose: used to hold the only instance of the object that
		 can be created

	declaration:
	
		System* mInstance
**********************************************************************************

	name: mWidth
	
	purpose: holds the width of the screen

	declaration:
	
		int mWidth
**********************************************************************************

	name: mHeight
	
	purpose: holds the height of the screen

	declaration:
	
		int mHeight
**********************************************************************************

	name: systemFunction
	
	purpose: a function pointer to represent a generic form for
		 member functions of System so that they can be easily
		 grouped together

	declaration:
	
		typedef void (System::*systemFunction)(const vector<string>&)
**********************************************************************************

	name: systemFunctions
	
	purpose: a map whose key is a string representing the name of
		 a function which is then paired with a systemFunction

	declaration:
	
		map<string, systemFunction> systemFunctions
**********************************************************************************

	name: aliasCommands
	
	purpose: a map whose key is a string representing the aliased
		 command name which is mapped to the name of the 
		 system command the user aliased it to

	declaration:
	
		map<string, string> aliasCommands
**********************************************************************************

	name: mReadyQueue
	
	purpose: a queue of all the processes whose state is ready

	declaration:
	
		pcbQueue mReadyQueue
**********************************************************************************

	name: mBlockedQueue
	
	purpose: a queue of all the processes whose state is blocked

	declaration:
	
		pcbQueue mBlockedQueue
**********************************************************************************
